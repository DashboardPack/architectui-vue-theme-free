module.exports = {
    runtimeCompiler: true,
    productionSourceMap: false,
    lintOnSave: false, // Disable ESLint during development

    publicPath: process.env.NODE_ENV === 'production'
        ? './'
        : '/',

    devServer: {
        port: 8080,
        stats: 'minimal'
    },

    configureWebpack: config => {
        // Override the progress plugin configuration
        config.plugins = config.plugins.filter(plugin => {
            return plugin.constructor.name !== 'ProgressPlugin'
        })
        
        config.plugins.push(
            new (require('webpack')).DefinePlugin({
                __VUE_OPTIONS_API__: true,
                __VUE_PROD_DEVTOOLS__: false,
                __VUE_PROD_HYDRATION_MISMATCH_DETAILS__: false,
                __PINIA_DEVTOOLS__: false
            }),
            // Replace devtools modules with empty stubs to avoid birpc dependency
            new (require('webpack')).NormalModuleReplacementPlugin(
                /^@vue\/devtools-api$/,
                require.resolve('./devtools-stub.js')
            ),
            new (require('webpack')).NormalModuleReplacementPlugin(
                /^@vue\/devtools-kit$/,
                require.resolve('./devtools-stub.js')
            ),
            new (require('webpack')).NormalModuleReplacementPlugin(
                /^birpc$/,
                require.resolve('./devtools-stub.js')
            )
        )
    },

    transpileDependencies: [
        'bootstrap-vue-next',
        'vue-chartjs'
    ],

    chainWebpack: config => {
        config.resolve.alias.set('vue', '@vue/compat')
        
        // Remove all progress-related plugins
        config.plugins.delete('progress')
        
        // Disable ESLint during development to avoid CLIEngine errors
        config.module.rules.delete('eslint')
        
        config.module
            .rule('vue')
            .use('vue-loader')
            .tap(options => {
                return {
                    ...options,
                    compilerOptions: {
                        compatConfig: {
                            MODE: 2
                        }
                    }
                }
            })
    }
}